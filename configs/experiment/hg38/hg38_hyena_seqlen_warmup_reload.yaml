# @package _global_
defaults:
  - /pipeline: hg38
  - override /scheduler: cosine_warmup_timm

model:
  _name_: lm
  d_model: 32
  n_layer: 8
  d_inner: ${eval:4 * ${.d_model}}
  vocab_size: 12
  resid_dropout: 0.0
  embed_dropout: 0.1
  fused_mlp: False # figure out how to use fused MLP, maybe only with bf16 + a100
  fused_dropout_add_ln: False
  checkpoint_mixer: False  # set true for memory reduction
  checkpoint_mlp: False  # set true for memory reduction
  residual_in_fp32: True
  pad_vocab_size_multiple: 8
  layer:
    _name_: hyena
    emb_dim: 5
    filter_order: 64
    short_filter_order: 3
    l_max: ${eval:${dataset.max_length}+2}
    modulate: True
    w: 10
    lr: ${optimizer.lr}
    wd: 0.0
    lr_pos_emb: 0.0

task:
  # _name_: lm
  _name_: hg38  # equivalent to lm task, plus allows extra metrics to be calculated
  loss:
    _name_: cross_entropy

trainer:
  accelerator: gpu
  devices: 1
#    - 0
  num_nodes: 1
  # accumulate_grad_batches: ${div_up:${train.global_batch_size}, ${eval:${trainer.devices} * ${dataset.batch_size} * ${trainer.num_nodes}}}
  max_epochs: 100
  precision: bf16  # bf16 only a100
  gradient_clip_val: 1.0
  strategy: null

callbacks:
  seqlen_warmup_reload:
    # epochs refers to how long to run at that stage (not cummulative!)
    # this is just a sample
    stage_params:
      - epochs: 2  # means run this stage for 2 epochs (0, and 1)
        seq_len: 1024
        batch_size: 256  # grad accum = 1, since train.global_batch_size=256, 是最大batch size
      - epochs: 2  # run for 2 epochs (2 and 3)
        seq_len: 2048
        batch_size: 128
      - epochs: 2  # run for epochs 4, 5
        seq_len: 4096  #
        batch_size: 64  # batch size第二大，此时grad accum = 2, max_batch_size // batch_size
      - epochs: 2  # epoch 6, 7
        seq_len: 8192  
        batch_size: 32
      - epochs: 4  #  epoch 8, 9, 10, 11
        seq_len: 16_384  # 
        batch_size: 16
      - epochs: 4  # epoch 12, 13, 14, 15
        seq_len: 32_768
        batch_size: 8
      - epochs: 4  # epoch 16, 17, 18, 19
        seq_len: 65_536
        batch_size: 4
      - epochs: 4
        seq_len: 131_072
        batch_size: 2
      - epochs: 4
        seq_len: 230_000
        batch_size: 1

dataset:
  # batch_size: 32  # Per GPU
  batch_size: 1  # this is the test batch size (and final train batch size)
  max_length: 230_000 # note this is the test max length (and the final train max_length) + 2
  # optional, default is max_length
  max_length_val: ${dataset.max_length}
  max_length_test: ${dataset.max_length}
  tokenizer_name: char
  pad_max_length: null  # needed for bpe tokenizer only
  add_eos: true
  rc_aug: false
  num_workers: 2

scheduler:
  t_in_epochs: False
  t_initial: ${eval:${div_up:${dataset.__train_len}, ${train.global_batch_size}} * ${trainer.max_epochs}}
  warmup_lr_init: 1e-6
  warmup_t: ${eval:${div_up:${dataset.__train_len}, ${train.global_batch_size}} * ${trainer.max_epochs} * 0.01}
  lr_min: ${eval:0.1 * ${optimizer.lr}}

optimizer:
  lr: 6e-4
  weight_decay: 0.1

train:
  gpu_mem: ${eval:"round(float(__import__('subprocess').check_output('nvidia-smi -i 0 --query-gpu=memory.total --format=csv,noheader,nounits', shell=True).strip().decode()) / 1000)"}
  seed: 2222
  global_batch_size: 256  # effects the scheduler, need to set properly
  remove_test_loader_in_eval: True
#  pretrained_model_strict_load: True  # false allows encoder/decoder to be used if new model uses it
  # for loading backbone and not head, requires both of these flags below
#  pretrained_model_path: /home/share/huadjyin/home/s_sukui/03_project/01_GeneLLM/hyena-dna/outputs/2024-04-10/17-06-29-028998/checkpoints/val/loss.ckpt
#  validate_at_start: True
#  ckpt: /home/share/huadjyin/home/s_sukui/03_project/01_GeneLLM/hyena-dna/outputs/2024-04-10/17-06-29-028998/checkpoints/val/loss.ckpt











